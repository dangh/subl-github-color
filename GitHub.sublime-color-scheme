{
  "name": "GitHub",
  "author": "DangH",
  "variables": {
    "black": "hsl(0, 0%, 0%)",
    "bluish_bg_vscode": "hsl(257, 37%, 96%)",
    "bluish_fg_vscode": "hsl(204, 100%, 37%)",
    "bracket_match_fg": "hsl(2, 96%, 67%)",
    "caret": "hsl(194, 97%, 55%)",
    "class_fg": "hsl(14, 83%, 60%)",
    "comment_fg": "hsl(120, 1%, 59%)",
    "constant_bg": "hsla(111, 26%, 95%, 0.6)",
    "constant_fg": "hsl(142, 100%, 33%)",
    "diff_header_bg": "hsl(210, 100%, 93%)",
    "diff_header_fg": "hsl(210, 12%, 30%)",
    "diff_range_bg": "hsla(210, 13%, 12%, 0.5)",
    "diff_range_fg": "hsl(210, 100%, 97%)",
    "find_highlight_bg": "hsl(47, 100%, 79%)",
    "flowtype_bg": "hsl(51, 54%, 97%)",
    "flowtype_fg": "hsl(38, 95%, 37%)",
    "flowtype_number_fg": "hsl(30, 88%, 43%)",
    "flowtype_primitive_fg": "hsl(315, 71%, 38%)",
    "flowtype_punctuation_fg": "hsl(46, 78%, 31%)",
    "function_name_fg": "hsl(264, 28%, 50%)",
    "invalid_bg": "hsl(305, 98%, 68%)",
    "invalid_fg": "hsl(300, 31%, 26%)",
    "keyword_bg": "hsl(0, 100%, 96%)",
    "keyword_fg": "hsl(332, 70%, 38%)",
    "line_highlight_bg": "hsl(49, 77%, 88%)",
    "linenumber_fg": "hsl(0, 0%, 72%)",
    "markup_inserted_bg": "hsl(120, 100%, 96%)",
    "markup_inserted_fg": "hsl(125, 61%, 26%)",
    "parameter_fg": "hsl(32, 98%, 56%)",
    "property_fg": "hsl(195, 100%, 35%)",
    "punctuation_separator_fg": "hsl(0, 0%, 33%)",
    "purplish_bg_vscode": "hsla(253, 100%, 81%, 0.2)",
    "purplish_fg_vscode": "hsl(244, 41%, 33%)",
    "reddish_bg_vscode": "hsl(343, 37%, 96%)",
    "reddish_fg_vscode": "hsl(345, 69%, 46%)",
    "selection_bg": "hsl(210, 95%, 85%)",
    "semicolon_fg": "hsl(0, 0%, 87%)",
    "string_bg": "hsla(210, 95%, 85%, 0.2)",
    "string_fg": "hsl(225, 72%, 33%)",
    "text_bg": "hsl(0, 0%, 100%)",
    "text_fg": "hsl(0, 0%, 20%)"
  },
  "globals": {
    "foreground": "var(text_fg)",
    "background": "var(text_bg)",
    "caret": "var(caret)",
    "invisibles": "color(var(black) alpha(0.063))",
    "line_highlight": "var(line_highlight_bg)",
    "selection": "var(selection_bg)",
    "selection_border": "var(selection_bg)",
    "selection_border_width": "0",
    "selection_corner_radius": "5",
    "gutter_foreground": "var(linenumber_fg)",
    "shadow": "color(var(black) alpha(0.27))",
    "guide": "color(var(black) alpha(0.063))",
    "active_guide": "var(black)",
    "stack_guide": "color(var(black) alpha(0.063))",
    "find_highlight_foreground": "var(black)",
    "find_highlight": "var(find_highlight_bg)",
    "brackets_options": "underline foreground",
    "brackets_foreground": "var(bracket_match_fg)",
    "bracket_contents_options": "underline foreground",
    "bracket_contents_foreground": "var(bracket_match_fg)",
    "tags_options": "underline foreground",
    "tags_foreground": "var(bracket_match_fg)"
  },
  "rules": [
    {
      "name": "comment",
      "scope": "comment, punctuation.definition.eslint",
      "foreground": "var(comment_fg)"
    },
    {
      "name": "invisible semicolon",
      "scope": "punctuation.terminator.statement",
      "foreground": "var(semicolon_fg)"
    },
    {
      "scope": "string - meta.embedded - string.text",
      "foreground": "var(string_fg)"
    },
    {
      "name": "String highlight",
      "scope":
        "string.quoted - meta.embedded, string.interpolated - entity.quasi.tag.name, string.attribute.jsx, string.template, meta.embedded string.quoted",
      "foreground": "var(string_fg)",
      "background": "var(string_bg)"
    },
    {
      "scope": "invalid",
      "foreground": "var(invalid_fg)",
      "background": "var(invalid_bg)"
    },
    {
      "scope": "constant",
      "foreground": "var(constant_fg)"
    },
    {
      "name": "keyword",
      "scope": "keyword, storage, support.function, punctuation.accessor",
      "foreground": "var(keyword_fg)"
    },
    {
      "name": "Function argument",
      "scope": "meta.function.argument, variable.parameter, meta.parens.c",
      "foreground": "var(parameter_fg)"
    },
    {
      "name": "entity.name.tag",
      "scope": "entity.name.tag, entity.name.tag support.class, entity.name.class",
      "foreground": "var(constant_fg)"
    },
    {
      "name": "entity.name.tag.close",
      "scope": "entity.name.tag.close"
    },
    {
      "name": "entity.name.tag.html",
      "scope": "entity.name.tag.html"
    },
    {
      "name": "Attribute",
      "scope": "entity.other.attribute-name, variable.other.attribute",
      "foreground": "var(function_name_fg)",
      "font_style": "italic"
    },
    {
      "name": "entity.name.module.js, variable.import.parameter.js, variable.other.class.js",
      "scope": "entity.name.module.js, variable.import.parameter.js, variable.other.class.js",
      "foreground": "var(function_name_fg)"
    },
    {
      "scope": "entity.name.accessor.js",
      "foreground": "var(function_name_fg)"
    },
    {
      "scope": "entity.name.method.js",
      "foreground": "var(function_name_fg)"
    },
    {
      "scope": "meta.method.js",
      "foreground": "var(text_fg)"
    },
    {
      "scope": "support.function",
      "foreground": "var(keyword_fg)"
    },
    {
      "name": "Function name",
      "scope": "entity.name.function, entity.name.method",
      "foreground": "var(function_name_fg)"
    },
    {
      "name": "entity.name.class.js",
      "scope": "entity.name.class.js, meta.instance.constructor",
      "foreground": "var(class_fg)"
    },
    {
      "scope": "entity.other.attribute-name.id",
      "foreground": "var(function_name_fg)"
    },
    {
      "name": "class name",
      "scope": "meta.prototype support.class",
      "foreground": "var(function_name_fg)"
    },
    {
      "name": "Library constant",
      "scope": "support.constant",
      "foreground": "var(keyword_fg)"
    },
    {
      "name": "Library class/type",
      "scope":
        "support.type, support.class, variable.language, support.variable, support.function.external, variable.other.dollar.only, variable.other.object.dollar.only",
      "foreground": "var(class_fg)"
    },
    {
      "name": "js user-defined constant",
      "scope":
        "variable.other.constant, variable.other.object.constant, constant.other.user-defined.js, variable.other.readwrite.allCap, variable.other.readwrite.import.allCap, variable.other.readwrite.export.allCap, variable.other.readwrite.property.allCap, variable.other.readwrite.property.object-literal.allCap, entity.name.constant",
      "foreground": "var(constant_fg)",
      "background": "var(constant_bg)"
    },
    {
      "name": "js decorator",
      "scope": "variable.other.readwrite.decorator, variable.annotation",
      "foreground": "var(constant_fg)"
    },
    {
      "scope": "entity.other.inherited-class",
      "foreground": "var(function_name_fg)",
      "font_style": "italic underline"
    },
    {
      "scope": "meta.diff.range",
      "foreground": "var(diff_range_bg)",
      "background": "var(diff_range_fg)"
    },
    {
      "scope": "meta.diff.header",
      "foreground": "var(diff_header_fg)",
      "background": "var(diff_header_bg)"
    },
    {
      "scope": "markup.deleted",
      "foreground": "var(keyword_fg)",
      "background": "var(keyword_bg)"
    },
    {
      "scope": "markup.changed",
      "foreground": "var(flowtype_punctuation_fg)",
      "background": "var(flowtype_bg)"
    },
    {
      "scope": "markup.inserted",
      "foreground": "var(markup_inserted_fg)",
      "background": "var(markup_inserted_bg)"
    },
    {
      "name": "JSON Key",
      "scope":
        "string.unquoted.label, table.key.lua, variable.other.bracket.shell, variable.other.normal.shell, variable.other.readwrite.property.object-literal, variable.other.readwrite.property.shorthand, meta.object-literal.key, object.property",
      "foreground": "var(property_fg)"
    },
    {
      "name": "Punctuation separator",
      "scope": "punctuation.separator, keyword.operator.other.association",
      "foreground": "var(punctuation_separator_fg)"
    },
    {
      "name": "variable.other.readwrite.moduleScoped.es",
      "scope": "variable.other.readwrite.moduleScoped.es",
      "foreground": "var(black)",
      "font_style": "italic"
    },
    {
      "name": "keyword.control.flow",
      "scope": "keyword.control.flow.return, keyword.control.flow.throw, storage.type.function.arrow, storage.type.function.async.arrow, keyword.control.flow.ts",
      "background": "var(keyword_bg)"
    },
    {
      "name": "source.php source.sql, source.php source.sql string.quoted",
      "scope": "source.php source.sql, source.php source.sql string.quoted",
      "background": "var(keyword_bg)"
    },
    {
      "scope": "meta.flowtype",
      "foreground": "var(flowtype_fg)",
      "background": "var(flowtype_bg)"
    },
    {
      "scope": "punctuation.flowtype",
      "foreground": "var(flowtype_punctuation_fg)"
    },
    {
      "scope": "constant.other.primitive.flowtype",
      "foreground": "var(flowtype_primitive_fg)"
    },
    {
      "scope": "region.redish",
      "foreground": "var(reddish_fg_vscode)",
      "background": "var(reddish_bg_vscode)"
    },
    {
      "scope": "region.yellowish",
      "foreground": "var(flowtype_number_fg)",
      "background": "var(flowtype_bg)"
    },
    {
      "scope": "region.greenish",
      "foreground": "var(constant_fg)",
      "background": "var(constant_bg)"
    },
    {
      "scope": "region.bluish",
      "foreground": "var(bluish_fg_vscode)",
      "background": "var(bluish_bg_vscode)"
    },
    {
      "scope": "region.purplish",
      "foreground": "var(purplish_fg_vscode)",
      "background": "var(purplish_bg_vscode)"
    }
  ]
}
